<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title> </title>
 <link href="http://abarrak.com/atom.xml" rel="self"/>
 <link href="http://abarrak.com/"/>
 <updated>2016-10-07T01:18:57+03:00</updated>
 <id>http://abarrak.com</id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>مراجعة كتاب (جبروت العقل)</title>
   <link href="http://abarrak.com/ar/2016/09/28/mans-unconquerable-mind"/>
   <updated>2016-09-28T00:00:00+03:00</updated>
   <id>http://abarrak.com/ar/2016/09/28/mans-unconquerable-mind</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/public/images/book-2543.jpg&quot; class=&quot;post-image resize-30&quot; alt=&quot;book-cover&quot; /&gt;&lt;/p&gt;

&lt;p&gt;قرأت قبل بضعةِ أيام كتاباً لجيلبرت هايت نقله للعربية فؤاد صروف، وقدم له أحمد زكي، بعنوان (جبروت العقل)، وفي لغته الأصلية: (Man’s Unconquerable Mind).&lt;/p&gt;

&lt;p&gt;لا أجد الكثير لأقوله حول الكتاب إلّا أنه بمجمله سهلُ العبارة قريبُ المعنى، يتناول مسائل أساسية حول أهمية التفكير الإنساني ومراحله التاريخية. يبحث الكتاب أيضاً في تعريف المعرفة، وبيان الممكن من حدودها، وأسباب الزلل الفكري بلغة شاعرية وعرض ممزوج بشواهد من الأحداث والقصص. ثم يختتم فصله الأخير بتوكيدات مُوجزة عن الإيمان بما للعقل من مكانة.&lt;/p&gt;

&lt;!-- post-excerpt --&gt;

&lt;p&gt;وبرأيي أنّ العديد مما عرضه الكاتب من القضايا أصبح من المسلمات أو الأمور المستقرة التي لا تحتاج لذكرٍ أو لما نجده في بعض الفقْرات من إسهاب وتطويل. وأذكرُ من المآخذ أيضاً افتقار بعض المواضع للانتظام والتسلسل العلمي، ولعل هذا راجع لطبيعة الكتاب المبسطة وزمن كتابته. أمّا الترجمةُ فهي ما زانت الكتاب وأضفت متعةً لقراءته.&lt;/p&gt;

&lt;p&gt;هذه هي المراجعة الأولى التي أكتبها هنا. من الأفكار التي ترد ببالي هو أن اكتب تدوينة واحدة كل شهرٍ لانطباعاتي عمّا قرأته كـ: (ما قرأته مؤخراً) أو (مراجعات القراءة لهذا الشهر) وأرجو أن يكون مناسباً أيضاً لمن يتصفح المدونة.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>(RVM) أداة لا غنى عنها لمطوري روبي</title>
   <link href="http://abarrak.com/ar/2016/09/01/rvm-ruby-version-manager-tool"/>
   <updated>2016-09-01T00:00:00+03:00</updated>
   <id>http://abarrak.com/ar/2016/09/01/rvm-ruby-version-manager-tool</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/public/images/rvm-logo.png&quot; class=&quot;post-image resize-30&quot; alt=&quot;rvm-logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(Ruby Version Manager) واحدة من أشهر أدوات إدارة النسخ للغة البرمجة (Ruby).
وهذه التدوينة تهدف لتعريف وتبيين فائدة استخدامها لمبرمجي روبي.&lt;/p&gt;

&lt;p&gt;بالإمكان تحميل الأداة من &lt;a href=&quot;https://rvm.io&quot;&gt;الموقع الرسمي هنا&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;من أهم الأشياء التي تقدمها RVM تثبيت وإزالة إصدرات روبي المتعددة، واستخدامها جنباً لجنب بلا تعارض.&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;&lt;strong&gt;تثبيت إصدارات اللغة&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;التثبيت بدهي كمثل غالب أدوات إدارة الحِزم (Package Managers). لتثبيت أحد إصدارات روبي، استخدم الأمر التالي:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rvm install &amp;lt;version_number&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;!-- post-excerpt --&gt;

&lt;p&gt;مع استبدال &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;version_number&amp;gt;&lt;/code&gt; برقم النسخة. لإصدارات روبي الرسمية (MRI) يكفي إدراج الرقم بمفرده (مثلاً: &lt;code class=&quot;highlighter-rouge&quot;&gt;1.9.3&lt;/code&gt; و &lt;code class=&quot;highlighter-rouge&quot;&gt;2.2.2&lt;/code&gt;)، لإصدارات أخرى، يلزم كتابة اسم الإصدار بأكمله (مثلاً: &lt;code class=&quot;highlighter-rouge&quot;&gt;jruby-1.7&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;وللإزالة، استخدم الآتي:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rvm uninstall &amp;lt;version_number&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;للاطلاع على الإصدارات المُجمعة سلفاً استخدم الأمر التالي، على أن هناك إصدارات أكثر من هذه متوفرة يمكن تنزيلها:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rvm list known
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-1&quot;&gt;&lt;strong&gt;تفعيل واستخدام إصدار معين&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;بعد التثبيت، ستتمكن من تفعيل أية إصدار للجلسة الحالية بالأمر الآتي:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rvm use &amp;lt;version_number&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;بالإضافة للنسخة الحاليةـ هناك نسخة افتراضية تستطيع تحديدها. لرؤية النسخ المثبتة، اكتب:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rvm list
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-2&quot;&gt;&lt;strong&gt;إدارة مجموعات الجواهر&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;عندما تتعدد المشاريع والتطبيقات التي تعمل عليها، يصبح من الضروري الفصل بين  مجموعات حزم روبي (الجواهر/Gems) لكل مشروع على حدة.&lt;/p&gt;

&lt;p&gt;أحد أجمل المزايا التي تجعلني معجباً بـ(RVM)، ومفضلاً لها على أدوات كمثل virtualenv لبايثون، هي الآلية المتبعة لتنظيم وإدارة مجموعات الجواهر. بكل بساطة انشىء بيئة معزولة للـ(Gems) بكتابة:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rvm gemset create &amp;lt;gemset_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;استبدل &lt;gemset_name&gt; بالاسم الذي تريده، مثلاً:&lt;/gemset_name&gt;&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rvm gemset create my-project
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;واستخدمها بالتعليمة الآتية:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rvm use &amp;lt;version_number&amp;gt;@&amp;lt;gemset_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;لنفرض أننا نملك &lt;code class=&quot;highlighter-rouge&quot;&gt;ruby-2.2.0&lt;/code&gt; وانشأنا المجموعة &lt;code class=&quot;highlighter-rouge&quot;&gt;my-stuff&lt;/code&gt;، التفعيل يكون بما يلي:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rvm use 2.2.0@my-stuff
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;أزل مجموعة محددة بالتعليمة:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rvm gemset delete &amp;lt;version_number&amp;gt;@&amp;lt;gemset_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-3&quot;&gt;&lt;strong&gt;تخصيص إصدار ومجموعة جواهر لمجلد معين&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;عند العمل على مشروع معين تم تخصيص إصدار ومجوعة جواهر له، من الأنسب والأحفظ للوقت والجهد إيجاد وسيلة أخرى بدل كتابة الأمر &lt;code class=&quot;highlighter-rouge&quot;&gt;use&lt;/code&gt; كل مرة.&lt;/p&gt;

&lt;p&gt;تمكنك RVM من ذلك بكل يسر بإنشاء ملفي (.dot) يحوي أحدهما &lt;code class=&quot;highlighter-rouge&quot;&gt;(.ruby-version)&lt;/code&gt; رقم النسخة والآخر &lt;code class=&quot;highlighter-rouge&quot;&gt;(.ruby-gemset)&lt;/code&gt; يحوي اسم المجموعة. انظر المثال التالي:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; “2.2.0” &amp;gt; .ruby-version
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; “my-project” &amp;gt; .ruby-gemset
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-4&quot;&gt;&lt;strong&gt;أكثر من ذلك&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;أرجو أن تكون التدوينة قد قدمت استعراضاً وافياً لأهم مميزات RVM لـروبي !&lt;/p&gt;

&lt;p&gt;وللمزيد من الإمكانات والاستعمالات، راجع -قارئي العزيز- الموقع الرسمي &lt;a href=&quot;https://rvm.io&quot;&gt;(https://rvm.io)&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Optimize Image Files from Your Terminal</title>
   <link href="http://abarrak.com/2016/08/30/optimize-images-from-your-terminal"/>
   <updated>2016-08-30T00:00:00+03:00</updated>
   <id>http://abarrak.com/2016/08/30/optimize-images-from-your-terminal</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/public/images/opt-img.jpg&quot; class=&quot;post-image resize-50 center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At many times, you’ll find yourself in need for rapid optimization to images at your hand. There are nice handy utility libraries that can help you reduce image sizes with simple commands in the terminal. The following lists some of them:&lt;/p&gt;

&lt;h3 id=&quot;optipng-advanced-png-optimizerhttpoptipngsourceforgenet&quot;&gt;&lt;a href=&quot;http://optipng.sourceforge.net/&quot;&gt;1. OptiPNG: Advanced PNG Optimizer&lt;/a&gt;:&lt;/h3&gt;

&lt;p&gt;Get it for Mac OS X:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install optipng
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For Linux Ubuntu:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install optipng
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To optimize an image, run:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;optipng &amp;lt;img-name.png&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To wildcard all images recursively in the current directory and sub directories:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -iname &lt;span class=&quot;s2&quot;&gt;&quot;*.png&quot;&lt;/span&gt; -exec optipng -o7 &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;!-- post-excerpt --&gt;

&lt;h3 id=&quot;jpegoptimhttpsgithubcomtjkojpegoptim&quot;&gt;&lt;a href=&quot;https://github.com/tjko/jpegoptim&quot;&gt;2. jpegoptim&lt;/a&gt;:&lt;/h3&gt;

&lt;p&gt;Install for Mac OS X:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install jpegoptim
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Install for Linux Ubuntu:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install jpegoptim
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Run the next command to optimize an image, &lt;code class=&quot;highlighter-rouge&quot;&gt;-m&lt;/code&gt; controls the image quality (0-100):&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jpegoptim -m70 &amp;lt;img-name.png&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Or optimize all recursively:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -iname &lt;span class=&quot;s2&quot;&gt;&quot;*.jpg&quot;&lt;/span&gt; -exec jpegoptim -m80 -o -p &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;gifsiclehttpswwwlcdforggifsicle&quot;&gt;&lt;a href=&quot;https://www.lcdf.org/gifsicle/&quot;&gt;3. gifsicle&lt;/a&gt;:&lt;/h3&gt;

&lt;p&gt;Install for Mac OS X:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install gifsicle
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For Linux Ubuntu:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install gifsicle
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The commands for single image, and a group of images respectively, are:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# for single image.&lt;/span&gt;
gifsicle --batch -V -O2 &amp;lt;image-name&amp;gt;.gif

&lt;span class=&quot;c&quot;&gt;# to start from cureent dir and go down.&lt;/span&gt;
find . -iname &lt;span class=&quot;s2&quot;&gt;&quot;*.gif&quot;&lt;/span&gt; -exec gifsicle --batch -V -O2 &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;aliases&quot;&gt;&lt;strong&gt;Aliases&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Here are some aliases to keep commands nearby for fast run on the active directory images.&lt;/p&gt;

&lt;p&gt;Be warn that those (also the previously mentioned commands) all alter the original images.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;compress_png&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;optipng -o7 *.png&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;compress_jpg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jpegoptim -m80 *.jpg&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;compress_gif&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;gifsicle --batch -V -O2 *.gif&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can tweak the optimization level and other options to suit your needs.&lt;/p&gt;

&lt;h3 id=&quot;imageoptim&quot;&gt;&lt;strong&gt;ImageOptim&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;If you’d like to use a GUI application, &lt;a href=&quot;https://imageoptim.com/mac&quot;&gt;ImageOptim&lt;/a&gt; is a pretty open source one for Mac OS X that supports multiple image formats.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/public/images/imageoptim.png&quot; alt=&quot;ImageOptim Screen Shot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Happy mature optimization :) !&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Fixing Sinatra UTF-8 issue in Tilt rendered templates</title>
   <link href="http://abarrak.com/2016/08/26/fix-sinatra-tilt-unicode"/>
   <updated>2016-08-26T00:00:00+03:00</updated>
   <id>http://abarrak.com/2016/08/26/fix-sinatra-tilt-unicode</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/public/images/sinatra-logo.png&quot; class=&quot;post-image resize-40 center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the past week, I’v been woking with Sinatra app deployment to AWS Elastic Beanstalk. In development environment everything was working just fine, but when I published the application and tested it in production, I encountered a weird problem in one of the templates that was suppose to be supporting uft-8 text without issues.&lt;/p&gt;

&lt;h3 id=&quot;symptoms&quot;&gt;&lt;strong&gt;Symptoms&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The error was appearing in one of the &lt;code class=&quot;highlighter-rouge&quot;&gt;.erb&lt;/code&gt; view files that contains a &lt;code class=&quot;highlighter-rouge&quot;&gt;textarea&lt;/code&gt; field. When non English text is populated in it at the server, the application crashes with 500 code. Here’s a fragment of the error stack trace:&lt;/p&gt;

&lt;!-- post-excerpt --&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2016-08-26 19:15:53 - Encoding::CompatibilityError - incompatible character encodings: UTF-8 and US-ASCII:
        /var/app/current/views/review.erb:69:in &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;block &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;singleton class&lt;span class=&quot;s1&quot;&gt;&#39;
        /var/app/current/views/review.erb:-7:in `instance_eval&#39;&lt;/span&gt;
        /var/app/current/views/review.erb:-7:in &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;singleton class&lt;span class=&quot;s1&quot;&gt;&#39;
        /var/app/current/views/review.erb:-9:in `__tilt_47353692136320&#39;&lt;/span&gt;
        /opt/rubies/ruby-2.2.5/lib/ruby/gems/2.2.0/gems/tilt-2.0.5/lib/tilt/template.rb:167:in &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;call&lt;span class=&quot;s1&quot;&gt;&#39;
        /opt/rubies/ruby-2.2.5/lib/ruby/gems/2.2.0/gems/tilt-2.0.5/lib/tilt/template.rb:167:in `evaluate&#39;&lt;/span&gt;
        /opt/rubies/ruby-2.2.5/lib/ruby/gems/2.2.0/gems/tilt-2.0.5/lib/tilt/template.rb:102:in &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;render&lt;span class=&quot;s1&quot;&gt;&#39;
        /opt/rubies/ruby-2.2.5/lib/ruby/gems/2.2.0/gems/sinatra-1.4.7/lib/sinatra/base.rb:823:in `render&#39;&lt;/span&gt;
        /opt/rubies/ruby-2.2.5/lib/ruby/gems/2.2.0/gems/sinatra-1.4.7/lib/sinatra/base.rb:667:in &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;erb&lt;span class=&quot;s1&quot;&gt;&#39;
        /var/app/current/helpers.rb:24:in `block (2 levels) in serve_page&#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Guided by the error message indication. I attempted to fix the issue by ensuring that all parts are encoded as UTF-8. I set &lt;code class=&quot;highlighter-rouge&quot;&gt;accept-charset&lt;/code&gt; attribute for the form and texteara tag to &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;UTF-8&quot;&lt;/code&gt;, forced source files to be UTF-8 by inserting &lt;code class=&quot;highlighter-rouge&quot;&gt;# 😁&lt;/code&gt; comment, and checked the Sinatra routing is also set to have
&lt;code class=&quot;highlighter-rouge&quot;&gt;headers &#39;Content-type&#39; =&amp;gt; &#39;text/html; charset=utf-8&#39;&lt;/code&gt;, But unfortunately none of that was solving the problem.&lt;/p&gt;

&lt;p&gt;By taking closer look at the stack trace, I figured that it was happening specifically during the template rendering phase, and might have something to do with Sinatra’s Tilt library.&lt;/p&gt;

&lt;h3 id=&quot;solution&quot;&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Indeed it was caused by Tilt . In fact, it’s a known issue and has been pointed out in the gem’s &lt;a href=&quot;https://github.com/rtomayko/tilt#encodings&quot;&gt;repository main page&lt;/a&gt;.
Setting ruby’s external encoding plus the source files to &lt;code class=&quot;highlighter-rouge&quot;&gt;UTF-8&lt;/code&gt; solved it for me just like mentioned in the link.&lt;/p&gt;

&lt;p&gt;If you’ve structured your app in the modular style, then set encoding early in the class.&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sinatra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Application&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# set encoding.&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default_external&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In classic applications, this would suffice.&lt;/p&gt;

&lt;div class=&quot;language-rb highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;default_external&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That’s it. Hope It helps someone else !&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Eloquent Ruby (Book Review)</title>
   <link href="http://abarrak.com/2016/06/25/elquoent-ruby"/>
   <updated>2016-06-25T00:00:00+03:00</updated>
   <id>http://abarrak.com/2016/06/25/elquoent-ruby</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/public/images/eloquent-ruby-cover.jpg&quot; class=&quot;post-image resize-30&quot; alt=&quot;book-cover&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Recently, I’ve read Oslen Russ’s &lt;a href=&quot;https://amzn.com/0321584104&quot; target=&quot;_blank&quot;&gt;“Eloquent Ruby”&lt;/a&gt; and it was delightful read overall.&lt;/p&gt;

&lt;p&gt;The book has a considerable reputation among the community programmers. It’s divided into (4) units on Ruby foundations and software process practices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Part (1)&lt;/strong&gt; and &lt;strong&gt;(2)&lt;/strong&gt; form the first half of the book. They start with the language basics, types and features, in addition to the coverage of OOP methodologies in Ruby (classes, modules, blocks).&lt;/p&gt;

&lt;p&gt;In &lt;strong&gt;Part (3)&lt;/strong&gt;, we see the metaprogramming capabilities and techniques. First chapter introduces the concept and some hook methods like &lt;code class=&quot;highlighter-rouge&quot;&gt;included&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;inherited&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;at_exit&lt;/code&gt; which keep the application life cycle more interactive and informed. Three consecutive chapters talk about the valuable dynamic programming function &lt;code class=&quot;highlighter-rouge&quot;&gt;method_missing&lt;/code&gt; and its use cases for &lt;strong&gt;better error handling&lt;/strong&gt;, &lt;strong&gt;delegation&lt;/strong&gt;, and &lt;strong&gt;building flexible APIs&lt;/strong&gt;. Last chapters discuss monkey patching and self modifying code. For me this was the most interesting part of the book.
&lt;!-- post-excerpt --&gt;&lt;/p&gt;

&lt;p&gt;Putting all covered topics in actions is what &lt;strong&gt;Part (4)&lt;/strong&gt; concerns about. The subjects in this part are internal and external DSLs constructions, and publishing Gems (packages), along with a brief tour on some of Ruby’s popular Implementations.&lt;/p&gt;

&lt;p&gt;I liked the writing style the author followed, which was example driven and kind of story telling. Each chapter starts with a motivational situation or by raising question, then it goes for building up the solution and revisiting it for improvements in an iterative way (dominant example is &lt;a href=&quot;https://rubygems.org/gems/document/&quot;&gt;the document class&lt;/a&gt;). Each chapter also has bits of real ruby code from libraries or actual projects in a subsection tilted &lt;em&gt;“In the Wild”&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Albeit there is a small portion of the book that’s outdated, I would argue that the majority of its content is still relevant now and times to come.&lt;/p&gt;

&lt;p&gt;If you’re looking for eloquently written material that explores and explains important aspects and background of the Ruby programming language without going into lengthy documentation details, then go with Eloquent Ruby !&lt;/p&gt;
</content>
 </entry>
 

</feed>
